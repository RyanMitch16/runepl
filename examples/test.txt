
var a, b = 10, 11
a, b = 9, 12

var power = func(x, n):(

    var iterator = func(i, product):(
        if (i == n):
            return product
        return iterator(i+1, product * x)
    )
    return iterator(0, 1)
)

var sqrt = func(x):(

    var recurse = func(left, right):(
        var middle = left + (right-left)/2.0
        if (middle == left):
            return middle
        if (middle*middle > x):
            return recurse(left,middle)
        return recurse(middle,right)
    )

    return recurse(0.0,x*1.0)
)

var nrt = func(x, n):(

    var recurse = func(left, right):(
        var middle = left + (right-left)/2.0
        if (middle == left):
            return middle
        if (power(middle,n) > x):
            return recurse(left,middle)
        return recurse(middle,right)
    )

    if (x < 0):
        if(n % 2 == 0):
            return null, "Unable to do an even root of a negative number"
        return 0.0-recurse(0.0, x*1.0)
    return recurse(0.0,x*1.0)
)


var val, e = nrt(0.0-27,2)

if (e != null):
    return e
return val
